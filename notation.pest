WHITESPACE = _{ " " | "\t" }

single_line_comment = _{ ";" ~ (!NEWLINE ~ ANY)* }
single_notation_comment = _{ "#;" ~ notation }
COMMENT = _{ single_line_comment | single_notation_comment }

// --------- boolean ------------
boolean_true  = @{ "#t" }
boolean_false = @{ "#f" }
boolean = _{ boolean_true | boolean_false }

// --------- integer ------------
dec_int = @{ ASCII_DIGIT ~ ("_"? ~ ASCII_DIGIT)* }
int = { ("+"|"-")? ~ dec_int }
// --------- rational -----------
rational = { int ~ "/" ~ int }

// --------- string ----------
string = { "\"" ~ ALPHABETIC* ~ "\"" }

// --------- identifier ----------
SCHEME_ALPHA = _{
    ALPHABETIC
  | "-"
  | "!"
  | "$"
  | "%"
  | "^"
  | "&"
  | "*"
  | "-"
  | "_"
  | "="
  | "+"
  | "<"
  | "."
  | ">"
  | "/"
  | "?"
}
identifier = @{ ALPHABETIC ~ (SCHEME_ALPHA*)? }

// --------- list ---------------
paren_list = _{ "(" ~ notation* ~ ")" }
bracket_list = _{ "[" ~ notation* ~ "]" }
list = { paren_list | bracket_list}

// --------- set ----------------
set = { "#{" ~ notation* ~ "}" }

// --------- map ----------------
map = {
    "{" ~ "}"
  | "{" ~ (notation ~ notation) ~ ("," ~ notation ~ notation)* ~ "}"
}

// --------- quote --------------
quote = { "'" ~ notation }
quasiquote = { "`" ~ notation }
unquote = { "," ~ notation }
unquote_splicing = { ",@" ~ notation }
// --------- syntax -------------
syntax = { "#'" ~ notation }
quasisyntax = { "#`" ~ notation }
unsyntax = { "#," ~ notation }
unsyntax_splicing = { "#,@" ~ notation }

notation = _{
	  boolean
  | rational 
  | int
  | string
  | identifier
  | list
  | set
  | map
  // quoting
  | quote
  | quasiquote
  | unquote
  | unquote_splicing
  // syntax
  | syntax
  | quasisyntax
  | unsyntax
  | unsyntax_splicing
}
